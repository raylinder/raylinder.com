@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@using raylinder.Entities

@inject IWebAssemblyHostEnvironment _hostEnvironment
@inject NavigationManager _navigationManager
@inject IBaseDomain _base


<div class="row">
    <div class="col-12 py-5">
        <div class="row">
            <div class="col-12">
                <div class="h3 pb-2 mb-4 fw-light text-primary text-uppercase border-bottom border-secondary" id="Experience">
                    Experience.
                </div>
            </div>
        </div>
        <div class="row py-5">
            <div class="col-12">
                <div class="row">
                    <div class="col-12 text-center">
                        <span class="h5 pb-2 mb-4 fw-bolder text-primary text-uppercase border-bottom border-secondary" id="ssHeading2">
                            Years of Experience.
                        </span>
                    </div>
                </div>
                <div class="row py-5">
                    <div class="col-12">
                        <MudChart ChartType="ChartType.Donut" LegendPosition="Position.Start" Width="300px" Height="300px" InputData="@LoadXpTotals()" InputLabels="@_labels">
                        </MudChart>
                    </div>
                </div>
            </div>
        </div>
        <div class="row pt-5">
            <div class="col-12">
                <div class="row">
                    <div class="col-12 text-center">
                        <span class="h5 pb-2 mb-4 fw-bolder text-primary text-uppercase border-bottom border-secondary" id="ssHeading2">
                            Professional Experience.
                        </span>
                    </div>
                </div>
                <div class="row pt-5">
                    <div class="col-12">
                        @foreach (var exp in workExperiences)
                        {
                            if (exp.Alignment == "Right")
                            {
                                <div class="row py-5">
                                    <div class="col-4">
                                        <div class="d-flex align-items-center justify-content-center text-center">
                                            @if (string.IsNullOrEmpty(exp.ImageUrl))
                                            {
                                                <h1 class="text-primary fw-light text-uppercase">@exp.CompanyName</h1>
                                            }
                                            else
                                            {
                                                <img src="@exp.ImageUrl" class="rounded-0 w-75" alt="@exp.CompanyName" />
                                            }
                                        </div>
                                    </div>
                                    <div class="col-8">
                                        <div class="text-body-primary ps-4 py-2 text-uppercase border-start border-primary">
                                            <h5>@exp.Title?.ToUpper()</h5>
                                            <h5 class="text-primary fw-light">@exp.CompanyName</h5>
                                            <div class="text-secondary text-uppercase small">
                                                @exp.Dates | @exp.Location
                                            </div>
                                        </div>
                                        <ul class="fs-6 py-3" style="list-style: disclosure-closed;">
                                            @foreach (var description in exp.Descriptions)
                                            {
                                                <li>
                                                    @description.Description
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            }
                            else if (exp.Alignment == "Left")
                            {
                                <div class="row py-5">
                                    <div class="col-8">
                                        <div class="text-body-primary ps-4 py-2 text-uppercase border-start border-primary">
                                            <h5>@exp.Title?.ToUpper()</h5>
                                            <h5 class="text-primary fw-light">@exp.CompanyName</h5>
                                            <div class="text-secondary text-uppercase small">
                                                @exp.Dates @if (!string.IsNullOrEmpty(exp.Location)){ <text> | </text> @exp.Location };
                                            </div>
                                        </div>
                                        @if (exp.CompanyName == "")
                                        {
                                            var subExps = workExperiences.Where(w => w.ParentId == exp.Id);

                                            <ul class="fs-6 py-3" style="list-style: none;">
                                                @foreach (var sub in subExps)
                                                {
                                                    <li class="border-top border-secondary py-4">
                                                        <h5 class="text-primary fw-light">@sub.CompanyName</h5>
                                                        <div class="text-secondary text-uppercase small pb-3">
                                                            @sub.Location
                                                        </div>
                                                        <ul class="fs-6 pb-5" style="list-style: disclosure-closed;">
                                                            @foreach (var subDecsription in sub.Descriptions)
                                                            {
                                                                <li>
                                                                    @subDecsription.Description
                                                                </li>
                                                            }
                                                        </ul>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <ul class="fs-6 py-3" style="list-style: disclosure-closed;">
                                                @foreach (var description in exp.Descriptions)
                                                {
                                                    <li>
                                                        @description.Description
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </div>
                                    <div class="col-4">
                                        <div class="d-flex align-items-center justify-content-center text-center">
                                            @if (string.IsNullOrEmpty(exp.ImageUrl))
                                            {
                                                <h1 class="text-primary fw-light text-uppercase">@exp.CompanyName</h1>
                                            }
                                            else
                                            {
                                                <img src="@exp.ImageUrl" class="rounded-0 w-50" alt="@exp.CompanyName" />
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code
{
    private IEnumerable<Skill> skills = new List<Skill>();
    private IEnumerable<WorkExperience> workExperiences = new List<WorkExperience>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        skills = await _base.ExperienceService.GetSkills();
        workExperiences = await _base.ExperienceService.Get();
    }

    private string[] _labels = { "" };

    private double[] LoadXpTotals()
    {
        var skillList = new List<string>();
        var yearsList = new List<double>();

        foreach (var skill in skills)
        {
            skillList.Add($"{skill.Name} - {skill.TotalYears} yrs");
            yearsList.Add(skill.TotalYears);
        }

        var totals = yearsList.ToArray();

        _labels = skillList.ToArray();

        return totals;
    }
}
